import torch
import torch.onnx
from models.experimental import attempt_load 

weights_path = '/content/yolov7/runs/train/exp/weights/last.pt'
model = attempt_load(weights_path, map_location='cuda')


model.eval()

dummy_input = torch.randn(1, 3, 640, 640).to('cuda')

torch.onnx.export(model, dummy_input, "yolov7.onnx", export_params=True, opset_version=12, do_constant_folding=True, input_names=['input'], output_names=['output'], dynamic_axes={'input': {0: 'batch_size'}, 'output': {0: 'batch_size'}})




import onnxruntime

ort_session = onnxruntime.InferenceSession("yolov7.onnx")

# Run inference with the ONNX model using the same dummy input (converted to numpy)
ort_inputs = {ort_session.get_inputs()[0].name: dummy_input.cpu().numpy()}
ort_outs = ort_session.run(None, ort_inputs)

pytorch_outs = model(dummy_input)
